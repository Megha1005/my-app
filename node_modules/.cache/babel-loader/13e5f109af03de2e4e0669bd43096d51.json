{"ast":null,"code":"var _jsxFileName = \"/home/g1994/Desktop/SFSU/Mintbean_demo/react-currency_converter/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Currencybox from './Currencybox';\nconst url = \"https://api.exchangeratesapi.io/latest\";\n\nfunction App() {\n  // usestate to list the names in the dropdown\n  // it returns an array of options\n  // first is the current currency and second is the object or function that allows to set this currency\n  const [listcurrency, setlistCurrency] = useState([]);\n  const [fromCurrency, setfromCurrency] = useState();\n  const [toCurrency, settoCurrency] = useState();\n  const [amount, setamount] = useState(1);\n  const [amountFromCurrency, setamountFromCurrency] = useState(true);\n  const [exchangeRate, setexchangeRate] = useState(); // here the useEffect takes two parameter: first is the function and second\n  // it is called the first time when this application is called\n\n  useEffect(() => {\n    fetch(url).then(res => res.json()).then(data => {\n      const nextcurrency = Object.keys(data.rates)[0];\n      setlistCurrency([data.base, ...Object.keys(data.rates)]);\n      setfromCurrency(data.base);\n      settoCurrency(nextcurrency);\n    });\n  }, []);\n  return (\n    /*#__PURE__*/\n    //  need Fragment to run the code : <> and </>\n    React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }\n    }, \" Conversion Rate\"), /*#__PURE__*/React.createElement(Currencybox, {\n      listcurrency: listcurrency,\n      selectCurrency: fromCurrency,\n      onChangeCurrency: e => setfromCurrency(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"equals\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }\n    }, \" || \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"equals\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }\n    }, \" || \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"equals\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }\n    }, \" \\\\/ \"), /*#__PURE__*/React.createElement(Currencybox, {\n      listcurrency: listcurrency,\n      selectCurrency: toCurrency,\n      onChangeCurrency: e => settoCurrency(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }\n    })))\n  );\n}\n\nexport default App;","map":{"version":3,"sources":["/home/g1994/Desktop/SFSU/Mintbean_demo/react-currency_converter/src/App.js"],"names":["React","useEffect","useState","Currencybox","url","App","listcurrency","setlistCurrency","fromCurrency","setfromCurrency","toCurrency","settoCurrency","amount","setamount","amountFromCurrency","setamountFromCurrency","exchangeRate","setexchangeRate","fetch","then","res","json","data","nextcurrency","Object","keys","rates","base","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAO,WAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,MAAMC,GAAG,GAAE,wCAAX;;AAEA,SAASC,GAAT,GAAe;AAEb;AACA;AACA;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACM,YAAD,EAAeC,eAAf,IAAiCP,QAAQ,EAA/C;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,EAA5C;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAqBX,QAAQ,CAAC,CAAD,CAAnC;AACA,QAAM,CAACY,kBAAD,EAAqBC,qBAArB,IAA8Cb,QAAQ,CAAC,IAAD,CAA5D;AACA,QAAM,CAACc,YAAD,EAAeC,eAAf,IAAkCf,QAAQ,EAAhD,CAVa,CAaZ;AACD;;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,KAAK,CAACd,GAAD,CAAL,CACGe,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACZ,YAAMC,YAAY,GAAGC,MAAM,CAACC,IAAP,CAAYH,IAAI,CAACI,KAAjB,EAAwB,CAAxB,CAArB;AACAnB,MAAAA,eAAe,CAAC,CAACe,IAAI,CAACK,IAAN,EAAY,GAAGH,MAAM,CAACC,IAAP,CAAYH,IAAI,CAACI,KAAjB,CAAf,CAAD,CAAf;AACAjB,MAAAA,eAAe,CAACa,IAAI,CAACK,IAAN,CAAf;AACAhB,MAAAA,aAAa,CAACY,YAAD,CAAb;AACD,KAPH;AAQD,GATQ,EASN,EATM,CAAT;AAWA;AAAA;AACE;AACA,2DACA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADA,eAEA,oBAAC,WAAD;AACA,MAAA,YAAY,EAAIjB,YADhB;AAEA,MAAA,cAAc,EAAIE,YAFlB;AAGA,MAAA,gBAAgB,EAAIoB,CAAC,IAAInB,eAAe,CAACmB,CAAC,CAACC,MAAF,CAASC,KAAV,CAHxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,eAQA;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARA,eASA;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATA,eAUA;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAVA,eAWA,oBAAC,WAAD;AACA,MAAA,YAAY,EAAGxB,YADf;AAEA,MAAA,cAAc,EAAGI,UAFjB;AAGA,MAAA,gBAAgB,EAAIkB,CAAC,IAAIjB,aAAa,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV,CAHtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXA,CADA;AAFF;AAwBD;;AAED,eAAezB,GAAf","sourcesContent":["import React, { useEffect , useState } from 'react';\nimport './App.css';\nimport Currencybox from './Currencybox';\n\nconst url =\"https://api.exchangeratesapi.io/latest\";\n\nfunction App() {\n\n  // usestate to list the names in the dropdown\n  // it returns an array of options\n  // first is the current currency and second is the object or function that allows to set this currency\n  const [listcurrency, setlistCurrency] = useState([])\n  const [fromCurrency, setfromCurrency] =useState()\n  const [toCurrency, settoCurrency] = useState()\n  const [amount, setamount] =useState(1)\n  const [amountFromCurrency, setamountFromCurrency] = useState(true)\n  const [exchangeRate, setexchangeRate] = useState()\n\n\n   // here the useEffect takes two parameter: first is the function and second\n  // it is called the first time when this application is called\n  \n  useEffect(() => {\n    fetch(url)\n      .then(res => res.json())\n      .then(data => {\n        const nextcurrency = Object.keys(data.rates)[0]\n        setlistCurrency([data.base, ...Object.keys(data.rates)])\n        setfromCurrency(data.base)\n        settoCurrency(nextcurrency)\n      })\n  } ,[])\n\n  return (\n    //  need Fragment to run the code : <> and </>\n    <>\n    <div className=\"container\">\n    <h1> Conversion Rate</h1>\n    <Currencybox \n    listcurrency = {listcurrency} \n    selectCurrency = {fromCurrency}\n    onChangeCurrency = {e => setfromCurrency(e.target.value)}\n    \n    />\n    <div className=\"equals\"> || </div>\n    <div className=\"equals\"> || </div>\n    <div className=\"equals\"> \\/ </div>\n    <Currencybox\n    listcurrency ={listcurrency}\n    selectCurrency= {toCurrency}\n    onChangeCurrency = {e => settoCurrency(e.target.value)}\n    \n    />\n    </div>\n    </>\n\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}