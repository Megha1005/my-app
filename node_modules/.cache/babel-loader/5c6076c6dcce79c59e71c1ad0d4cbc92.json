{"ast":null,"code":"import _toConsumableArray from\"/home/g1994/Desktop/SFSU/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/home/g1994/Desktop/SFSU/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import'./App.css';import Currencybox from'./Currencybox';import{BsArrowUpDown}from\"react-icons/bs\";var url=\"https://api.exchangeratesapi.io/latest\";function App(){// usestate to list the names in the dropdown\n// it returns an array of options\n// first is the current currency and second is the object or function that allows to set this currency\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),listcurrency=_useState2[0],setlistCurrency=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),fromCurrency=_useState4[0],setfromCurrency=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),toCurrency=_useState6[0],settoCurrency=_useState6[1];var _useState7=useState(1),_useState8=_slicedToArray(_useState7,2),amount=_useState8[0],setamount=_useState8[1];var _useState9=useState(true),_useState10=_slicedToArray(_useState9,2),amountFromCurrency=_useState10[0],setamountFromCurrency=_useState10[1];var _useState11=useState(true),_useState12=_slicedToArray(_useState11,2),amountToCurrency=_useState12[0],setamountToCurrency=_useState12[1];var _useState13=useState(),_useState14=_slicedToArray(_useState13,2),exchangeRate=_useState14[0],setexchangeRate=_useState14[1];var toAmount,fromAmount;if(amountFromCurrency){fromAmount=amount;toAmount=amount*exchangeRate;}else{toAmount=amount;fromAmount=amount/exchangeRate;}// here the useEffect takes two parameter: first is the function and second\n// it is called the first time when this application is called\nuseEffect(function(){fetch(url).then(function(res){return res.json();}).then(function(data){var nextcurrency=Object.keys(data.rates)[0];setlistCurrency([data.base].concat(_toConsumableArray(Object.keys(data.rates))));setfromCurrency(data.base);settoCurrency(nextcurrency);setexchangeRate(data.rates[nextcurrency]);});},[]);// whenever fromcurrency or tocurrency changes do this\nuseEffect(function(){if(fromCurrency!=null&&toCurrency!=null){fetch(\"\".concat(url,\"?base=\").concat(fromCurrency,\"&symbols=\").concat(toCurrency)).then(function(res){return res.json();}).then(function(data){return setexchangeRate(data.rates[toCurrency]);});}},[fromCurrency,toCurrency]);function fromAmountChange(e){setamount(e.target.value);setamountFromCurrency(true);}function toAmountChange(e){setamount(e.target.value);setamountFromCurrency(false);}var handleSwap=function handleSwap(e){e.preventDefault();settoCurrency(fromCurrency);setfromCurrency(toCurrency);setamountFromCurrency(amountToCurrency);setamountToCurrency(amountFromCurrency);};var currentRate=\"\".concat(parseFloat(fromAmount).toFixed(2),\" \").concat(fromCurrency,\" = \").concat(parseFloat(toAmount).toFixed(2),\" \").concat(toCurrency);return/*#__PURE__*/ (//  need Fragment to run the code : <> and </>\nReact.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"container-1\"},/*#__PURE__*/React.createElement(\"h1\",null,\" Currency Converter\")),/*#__PURE__*/React.createElement(\"div\",{className:\"container-2\"},/*#__PURE__*/React.createElement(\"div\",{className:\"text\"},\" \",/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"h2\",null,\"Enter the amount to convert\"))),/*#__PURE__*/React.createElement(Currencybox,{listcurrency:listcurrency,selectCurrency:fromCurrency,onChangeCurrency:function onChangeCurrency(e){return setfromCurrency(e.target.value);},onChangeAmount:fromAmountChange,amount:fromAmount}),/*#__PURE__*/React.createElement(\"div\",{className:\"w-full my-2 py-2\"},/*#__PURE__*/React.createElement(BsArrowUpDown,{onClick:handleSwap,className:\"equals text-white hover:text-gray-900 rounded-full h-12 w-12 bg-green-600 \"})),/*#__PURE__*/React.createElement(Currencybox,{listcurrency:listcurrency,selectCurrency:toCurrency,onChangeCurrency:function onChangeCurrency(e){return settoCurrency(e.target.value);},onChangeAmount:toAmountChange,amount:toAmount}),/*#__PURE__*/React.createElement(\"p\",null,currentRate))));}export default App;","map":{"version":3,"sources":["/home/g1994/Desktop/SFSU/my-app/src/App.js"],"names":["React","useEffect","useState","Currencybox","BsArrowUpDown","url","App","listcurrency","setlistCurrency","fromCurrency","setfromCurrency","toCurrency","settoCurrency","amount","setamount","amountFromCurrency","setamountFromCurrency","amountToCurrency","setamountToCurrency","exchangeRate","setexchangeRate","toAmount","fromAmount","fetch","then","res","json","data","nextcurrency","Object","keys","rates","base","fromAmountChange","e","target","value","toAmountChange","handleSwap","preventDefault","currentRate","parseFloat","toFixed"],"mappings":"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","sourcesContent":["import React, { useEffect , useState } from 'react';\nimport './App.css';\nimport Currencybox from './Currencybox';\nimport { BsArrowUpDown } from \"react-icons/bs\";\n\nconst url =\"https://api.exchangeratesapi.io/latest\";\n\nfunction App() {\n\n  // usestate to list the names in the dropdown\n  // it returns an array of options\n  // first is the current currency and second is the object or function that allows to set this currency\n  const [listcurrency, setlistCurrency] = useState([])\n  const [fromCurrency, setfromCurrency] =useState()\n  const [toCurrency, settoCurrency] = useState()\n  const [amount, setamount] = useState(1)\n  const [amountFromCurrency, setamountFromCurrency] = useState(true)\n  const [amountToCurrency, setamountToCurrency] = useState(true)\n  const [exchangeRate, setexchangeRate] = useState() \n\n\n  let toAmount, fromAmount \n  if(amountFromCurrency){\n    fromAmount = amount\n    toAmount = amount * exchangeRate\n  }\n  else{\n    toAmount =amount\n    fromAmount= amount / exchangeRate\n  }\n   // here the useEffect takes two parameter: first is the function and second\n  // it is called the first time when this application is called\n  \n  useEffect(() => {\n    fetch(url)\n      .then(res => res.json())\n      .then(data => {\n        const nextcurrency = Object.keys(data.rates)[0]\n        setlistCurrency([data.base, ...Object.keys(data.rates)])\n        setfromCurrency(data.base)\n        settoCurrency(nextcurrency)\n        setexchangeRate(data.rates[nextcurrency])\n\n      })\n  } ,[])\n\n\n  // whenever fromcurrency or tocurrency changes do this\n\n  useEffect(() => {\n    if(fromCurrency != null && toCurrency != null){\n      fetch(`${url}?base=${fromCurrency}&symbols=${toCurrency}`)\n        .then(res => res.json())\n        .then(data => setexchangeRate(data.rates[toCurrency]))\n    }\n  }, [fromCurrency,toCurrency])\n\n  function fromAmountChange(e){\n    setamount(e.target.value)\n    setamountFromCurrency(true)\n  }\n\n  function toAmountChange(e){\n    setamount(e.target.value)\n    setamountFromCurrency(false)\n  }\n\n  const handleSwap = (e) => {\n    e.preventDefault()\n    settoCurrency(fromCurrency)\n    setfromCurrency(toCurrency)\n    setamountFromCurrency(amountToCurrency)\n    setamountToCurrency(amountFromCurrency)\n  }\n  let currentRate = `${parseFloat(fromAmount).toFixed(2)} ${fromCurrency} = ${parseFloat(toAmount).toFixed(2)} ${toCurrency}`\n  return (\n    //  need Fragment to run the code : <> and </>\n    <>\n      <div className=\"container-1\"><h1> Currency Converter</h1></div>\n      <div className=\"container-2\">\n       <div className=\"text\"> <p><h2>Enter the amount to convert</h2></p></div>\n    <Currencybox \n    listcurrency = {listcurrency} \n    selectCurrency = {fromCurrency}\n    onChangeCurrency = {e => setfromCurrency(e.target.value)}\n    \n    onChangeAmount = {fromAmountChange}\n    amount = {fromAmount}\n    />\n    {/* <div className=\"equals\"><h2>  = </h2></div> */}\n    <div className='w-full my-2 py-2'><BsArrowUpDown onClick={handleSwap} className='equals text-white hover:text-gray-900 rounded-full h-12 w-12 bg-green-600 '/></div>\n    <Currencybox\n    listcurrency ={listcurrency}\n    selectCurrency= {toCurrency}\n    onChangeCurrency = {e => settoCurrency(e.target.value)}\n    onChangeAmount = {toAmountChange}\n    amount ={toAmount}\n    />\n        <p>{currentRate}</p>\n    </div>\n\n    </>\n\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}